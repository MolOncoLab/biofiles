export("end<-")
export("key<-")
export("qualif<-")
export("ranges<-")
export("start<-")
export("strand<-")
export(annotation)
export(as.gbLocation)
export(dbxref)
export(downstream)
export(end)
export(flanking)
export(fuzzy)
export(gbRecord)
export(gbRecordList)
export(getAccession)
export(getComment)
export(getDBLink)
export(getDBSource)
export(getDate)
export(getDefinition)
export(getDivision)
export(getFeatures)
export(getGeneID)
export(getKeywords)
export(getLength)
export(getLocus)
export(getMoltype)
export(getOrganism)
export(getReference)
export(getSequence)
export(getSource)
export(getTaxonomy)
export(getTopology)
export(getVersion)
export(hasKey)
export(hasQualif)
export(index)
export(key)
export(listQualif)
export(listUniqueQualifs)
export(location)
export(locusTag)
export(note)
export(product)
export(proteinID)
export(qualif)
export(ranges)
export(select)
export(seqinfo)
export(shift)
export(start)
export(strand)
export(summary)
export(translation)
export(upstream)
export(view)
export(width)
export(write.FeatureTable)
export(write.GenBank)
exportClass(gbFeature)
exportClass(gbFeatureList)
exportClass(gbLocation)
exportClass(gbRecord)
exportClass(gbRecordList)
exportMethods("$")
exportMethods("[")
exportMethods("[[")
exportMethods("end<-")
exportMethods("key<-")
exportMethods("qualif<-")
exportMethods("ranges<-")
exportMethods("start<-")
exportMethods("strand<-")
exportMethods(annotation)
exportMethods(dbxref)
exportMethods(end)
exportMethods(fuzzy)
exportMethods(getAccession)
exportMethods(getComment)
exportMethods(getDBLink)
exportMethods(getDBSource)
exportMethods(getDate)
exportMethods(getDefinition)
exportMethods(getDivision)
exportMethods(getFeatures)
exportMethods(getGeneID)
exportMethods(getKeywords)
exportMethods(getLength)
exportMethods(getLocus)
exportMethods(getMoltype)
exportMethods(getOrganism)
exportMethods(getReference)
exportMethods(getSequence)
exportMethods(getSource)
exportMethods(getTaxonomy)
exportMethods(getTopology)
exportMethods(getVersion)
exportMethods(hasKey)
exportMethods(hasQualif)
exportMethods(index)
exportMethods(key)
exportMethods(listQualif)
exportMethods(location)
exportMethods(qualif)
exportMethods(ranges)
exportMethods(select)
exportMethods(seqinfo)
exportMethods(shift)
exportMethods(start)
exportMethods(strand)
exportMethods(summary)
exportMethods(view)
exportMethods(width)
exportMethods(write.FeatureTable)
exportMethods(write.GenBank)
importFrom(BiocGenerics,"strand<-")
importFrom(BiocGenerics,annotation)
importFrom(BiocGenerics,strand)
importFrom(Biostrings,BStringSet)
importFrom(Biostrings,DNAStringSet)
importFrom(Biostrings,AAStringSet)
importFrom(Biostrings,readAAStringSet)
importFrom(Biostrings,readDNAStringSet)
importFrom(Biostrings,writeXStringSet)
importFrom(GenomicRanges,"elementMetadata<-")
importFrom(GenomicRanges,GRanges)
importFrom(GenomicRanges,GRangesList)
importFrom(GenomicRanges,Seqinfo)
importFrom(GenomicRanges,elementMetadata)
importFrom(GenomicRanges,findOverlaps)
importFrom(GenomicRanges,genome)
importFrom(GenomicRanges,seqinfo)
importFrom(GenomicRanges,seqlengths)
importFrom(GenomicRanges,seqnames)
importFrom(IRanges,"end<-")
importFrom(IRanges,"ranges<-")
importFrom(IRanges,"start<-")
importFrom(IRanges,DataFrame)
importFrom(IRanges,IRanges)
importFrom(IRanges,IntervalTree)
importFrom(IRanges,Rle)
importFrom(IRanges,end)
importFrom(IRanges,follow)
importFrom(IRanges,new2)
importFrom(IRanges,precede)
importFrom(IRanges,queryHits)
importFrom(IRanges,ranges)
importFrom(IRanges,setValidity2)
importFrom(IRanges,split)
importFrom(IRanges,start)
importFrom(IRanges,subjectHits)
importFrom(IRanges,width)
importFrom(XVector,subseq)
importFrom(XVector,toString)
importFrom(methods,as)
importFrom(methods,is)
importFrom(methods,new)
importFrom(parallel,detectCores)
importFrom(parallel,mclapply)
importFrom(parallel,mcmapply)
importFrom(plyr,rbind.fill)
importFrom(rmisc,"%ni%")
importFrom(rmisc,"%||%")
importFrom(rmisc,Curry)
importFrom(rmisc,all_empty)
importFrom(rmisc,blanks)
importFrom(rmisc,compose)
importFrom(rmisc,linebreak)
importFrom(rmisc,merge_dups)
importFrom(rmisc,pad)
importFrom(rmisc,strsplitN)
importFrom(rmisc,wrap)
importFrom(stats,setNames)
useDynLib(biofiles)
