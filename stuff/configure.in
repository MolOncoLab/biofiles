# biofiles configure.in by Gerhard Schöfl <gerhard.schöfl@gmail.com>
#
# Modified after:
#
# RQuantLib configure.in by Dirk Eddelbuettel <edd@debian.org>
#
# Using pieces borrowed from RPgSQL, GNU Gretl, GNU R and QuantLib
# Greatly simplified thanks to quantlib-config
# Another contribution by Kurt Hornik gratefully acknowledged

# require autoconf 2.67
AC_PREREQ([2.67])

# Process with autoconf to produce a configure script.
AC_INIT(biofiles, 0.4.0, gerhard.schöfl@gmail.com, https://github.com/gschofl/biofiles)

# Using C++
AC_LANG(C++)
AC_REQUIRE_CPP

# Determine R_HOME
# Next segment by Kurt Hornik
: ${R_HOME=$(R RHOME)}
if test -z "${R_HOME}"; then
    AC_MSG_ERROR([Could not find R_HOME.])   
fi
CXX=$(${R_HOME}/bin/R CMD config CXX)
CXXFLAGS=$("${R_HOME}/bin/R" CMD config CXXFLAGS)

# check for non-standard library: boost_regex
AC_LANG_PUSH([C++])
#AC_CHECK_HEADERS([boost/regex.hpp], [],
#    [AC_MSG_ERROR(Boost regex libraries not found.)])
#AC_CHECK_HEADERS([boost/algorithm/string_regex.hpp], [],
#    [AC_MSG_ERROR(Boost regex libraries not found.)])
AC_LANG_POP([C++])

## Add boost library option
## AC_SUBST([PKG_LIBS],["${PKG_LIBS} -lboost_regex"])
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)
AC_OUTPUT(src/Makevars)
echo "Completed configuration and ready to build."


