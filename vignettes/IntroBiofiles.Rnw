%\VignetteIndexEntry{An Introduction to Biofiles}
%\VignetteKeyword{DNA, Sequence, annotation, NCBI}
%\VignettePackage{biofiles}

\documentclass[11pt]{article}
\usepackage[utf8]{inputenc}

<<style, eval=TRUE, echo=FALSE, results=tex>>=
BiocStyle::latex(width = 90)
@

\SweaveOpts{concordance=TRUE}
\title{Using the biofiles package (work-in-progress)}
\author{Gerhard Schöfl \\
        Dept. for Cell and Molecular Biology \\
        Hans-Knöll Institute \\
        Jena, Germany}

\begin{document}
\maketitle
\date{\today}

\tableofcontents


\section{The \Rpackage{biofiles} package}

The \Rpackage{biofiles} package is an \R{} package for interfacing with \href{http://www.ncbi.nlm.nih.gov/Sitemap/samplerecord.html}{GenBank or GenPept} flat file records. The GenBank sequence format is a rich data format for storing sequences and associated annotations. \Rpackage{biofiles} includes utilities for parsing and writing GenBank files, and methods for interacting with the annotation and sequence data contained in these files.


\subsection{Classes in the \Rpackage{biofiles} package}

The classes in \Rpackage{biofiles} attempt to encapsulate the information contained in GenBank files as faithfully as possible. The design is based heavily on the GenBank/Embl feature tables. The central class for storing feature annotation information is the S4 class \Rclass{gbFeature}. Essentially, a \Robject{gbFeature} object contains a feature \emph{key}, a short description of the type of feature (e.g. ``CDS'' or ``gene''); the \emph{location} of the feature on the sequence string, and \emph{qualifiers}, additional information about the feature as key-value-pairs (e.g.: \emph{locus\_tag}, \emph{gene}, \emph{product}, or \emph{db\_xref} are frequently used qualifiers). A collection of \Rclass{gbFeature}s is organised into a \Rclass{gbFeatureList}.

A \Rclass{gbFeatureList} together with metadata and sequence information stored as \Rclass{XStringSet} objects (\Biocpkg{Biostrings}) make up a \Rclass{gbRecord}. A collection of \Rclass{gbRecord}s can be placed into a \Rclass{gbRecordList}.


\subsection{Importing sequence and annotation data}

\Rclass{gbRecord}s are generated by importing ``gb'' or ``gbk'' files. These files can be either downloaded and imported, or they can be directly retrieved and imported using the NCBI's public ENTREZ database server using the functionality provided the \CRANpkg{reutils} package. Alternatively whole genomes can be imported directly from NCBI using the \Rfunction{genomeRecordFromNCBI} function.

As an example \Rpackage{biofiles} includes the annotation file for the mitochondrial genome of \emph{Saccharomyces cerevisiae}:

<<preliminaries>>=
require(biofiles)
@

<<mito-path>>=
mito.path <- system.file("extdata", "S_cerevisiae_mito.gbk", package="biofiles")
@

To read a GenBank file into \R{} use the command
<<read-mito>>=
mito <- gbRecord(mito.path)
mito
@


\subsection{Saving and loading \Rclass{gbRecord}s}

\Rclass{gbRecord} objects can be stored efficiently by writing the content to a compressed ``.rds'' file using \Rfunction{saveRecord} and re-imported using \Rclass{loadRecord}. Alternatively, \Rclass{gbRecord} objects can be exported as a GenBank flat file using \Rfunction{write.GenBank} or in GenBank feature table format using \Rfunction{write.FeatureTable}.
<<store-mito>>=
saveRecord(mito)
rm(mito)
mito <- loadRecord("NC_001224.rds")
summary(mito, n=3)
@

\section{Summarising a Genbank record}

A quick overview over the content of a \Rclass{gbRecord} is provided by \Rfunction{summary}:
<<summarise>>=
summary(mito)
@

The frequency of features/qualifiers can be quickly tablulated:
<<tabulate>>=
qualifTable(mito)
featureTable(mito)
@




\section{Exctracting subsets of the data}

There are a number of methods for extracting data.

We can access each component of the header, e.g.:
<<extract-header>>=
getAccession(mito)
getDefinition(mito)
getGeneID(mito)
getOrganism(mito)
@

We can extract the DNA sequence as a whole:
<<extract-sequence>>=
getSequence(mito)
@

We can extract the Feature table:
<<extract-ft>>=
ft(mito)
@

\subsection{Filtering the feature table}



\section{Session Information}
All of the output in this vignette was produced under the following
conditions:

<<sessinfo>>=
sessionInfo()
@

\end{document}
